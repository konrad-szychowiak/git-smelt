(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{IXnM:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return i})),n.d(t,"default",(function(){return m}));var a=n("Fcif"),o=n("+I+c"),r=(n("mXGw"),n("/FXl")),s=n("TjRS"),i=(n("aD51"),{});void 0!==i&&i&&i===Object(i)&&Object.isExtensible(i)&&!i.hasOwnProperty("__filemeta")&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/index.mdx"}});var c={_frontmatter:i},b=s.a;function m(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(r.b)(b,Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"introduction"},"Introduction"),Object(r.b)("p",null,Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.npmjs.com/package/git-smelt"}),Object(r.b)("inlineCode",{parentName:"a"},"git-smelt"))," is a library designed to facilitate usage of different git hosts' APIs."),Object(r.b)("p",null,"The solution is based on ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"./smelters/about"}),Object(r.b)("em",{parentName:"a"},"smelters"))," â€“ classes, that provide methods to access\nspecific endpoints on the hosts' side. For example you can use ",Object(r.b)("inlineCode",{parentName:"p"},"getUser")," on any ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"./smelters/about"}),Object(r.b)("em",{parentName:"a"},"smelter")),"\nto get user data from ",Object(r.b)("strong",{parentName:"p"},"any")," of the supported providers."),Object(r.b)("p",null,"The following will work:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"import { gitlab, github } from 'git-smelt'\n\nconst myUsername = 'konrad-szychowiak';\nconst providers = [ gitlab, github ];\nproviders.forEeach((provider) => {\n  provider\n    .getUser(myUsername)\n    .then(r => {\n      console.log(r);\n    })\n    .catch(e => {\n      console.error(e);\n    });\n});\n")))}void 0!==m&&m&&m===Object(m)&&Object.isExtensible(m)&&!m.hasOwnProperty("__filemeta")&&Object.defineProperty(m,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/index.mdx"}}),m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-index-mdx-bd8e2816e9e46be889ac.js.map